<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="indexpage" kind="page">
    <compoundname>index</compoundname>
    <title>Tokenika TEOS library</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><heading level="2">Rationale</heading>
</para><para>Tokenika TEOS library was designed for the Tokenika EOSFactory. The EOSFactory is to be an IDE (Integrated Development Environment) for EOSIO smart-contracts.</para><para>From <ulink url="#https://en.wikipedia.org/wiki/Integrated_development_environment">Wikipedia</ulink>:</para><para><emphasis>An integrated development environment (IDE) is a software application that provides comprehensive facilities to computer programmers for software development. An IDE normally consists of a source code editor, build automation tools, and a debugger.</emphasis></para><para>The TEOS library is the engine that powers these <emphasis>comprehensive facilities</emphasis>.</para><para><heading level="2">Walkthrough</heading>
</para><para>Our plan is to build around the <ulink url="#https://code.visualstudio.com/"><emphasis>Visual Studio Code</emphasis></ulink>. With VS code, we can have all what we want in one: <verbatim>* Linux Mac and Windows compatibility,
* multi-language (C/C++, Python) support as InteliSense, code browsing,
* VS code task system,
* plentifulness of extensions,
* a room for specialized EOSIO smart-contract IDE extension.
</verbatim></para><para>Please, walkthrough the following outline of our IDE.</para><para><heading level="3">Starting with a template</heading>
</para><para>Let you have installed <emphasis>EOSFactory</emphasis> according to uor instructions. Let you have your smart-contract workspace defined, either with the <computeroutput>-w</computeroutput> option of the <computeroutput>eosfactory</computeroutput> installer, or with a corresponding entry in the <computeroutput>config.json</computeroutput> file, for example: <programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal">........................................</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;EOSIO_CONTRACT_WORKSPACE&quot;:<sp/>&quot;/mnt/c/Workspaces/EOS/contracts&quot;,<sp/></highlight></codeline>
<codeline><highlight class="normal">........................................</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> You can start development from a template, for example: <programlisting><codeline><highlight class="normal">$<sp/>$EOSIO_TEOS<sp/>bootstrap<sp/>contract<sp/>hello.teos</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/>template<sp/>contract:<sp/>/mnt/c/Workspaces/EOS/contracts/hello.teos</highlight></codeline>
</programlisting> Now, let you open <emphasis>Visual Studio Code</emphasis> in the <computeroutput>hello.teos</computeroutput> contract directory. Do <computeroutput>CTR+SHIFT+P</computeroutput>, chose <computeroutput>Open Folder...</computeroutput> browse to the directory. Please, be sure that you have installed the <computeroutput>C/C++</computeroutput> extension to the <emphasis>VS code</emphasis>.</para><para><heading level="3">InteliSense and code browsing</heading>
</para><para>Now, you can open <computeroutput>hello.teos.cpp</computeroutput>. With the <computeroutput>C/C++</computeroutput>, you can go to definition/declaration, for example (see the description of te extension for many more): place right mouse over the <computeroutput>print</computeroutput> function name and chose <computeroutput>Pick Declaration</computeroutput>.</para><para><heading level="3">Contract compilation</heading>
</para><para>Not implemented yet.</para><para>### EOSIO smart contract API <programlisting><codeline><highlight class="normal">VS<sp/>code<sp/>main<sp/>menu<sp/>Tasks<sp/>-&gt;<sp/>Run<sp/>Task...<sp/>-&gt;<sp/>API</highlight></codeline>
</programlisting> opens <ulink url="#https://eosio.github.io/eos/group__contractdev.html">Smart Contract API Reference</ulink>.</para><para><heading level="3">Contract build</heading>
</para><para>You can build the contract in two ways: with the <emphasis>VS code</emphasis> build task, or with the cmake procedures.</para><para>#### <emphasis>VS code</emphasis> build task <programlisting><codeline><highlight class="normal">VS<sp/>code<sp/>main<sp/>menu<sp/>Tasks<sp/>-&gt;<sp/>Run<sp/>Task<sp/>Build...<sp/>-&gt;<sp/>API</highlight></codeline>
</programlisting> results in placing WAST and ABI files in the contract build directory: <programlisting><codeline><highlight class="normal">Executing<sp/>task:<sp/>/mnt/c/Workspaces/EOS/eosfactory/teos/build/teos/teos<sp/>generate<sp/>abi<sp/>/mnt/c/Workspaces/EOS/contracts/hello.teos;/mnt/c/Workspaces/EOS/eosfactory/teos/build/teos/teos<sp/>build<sp/>contract<sp/>/mnt/c/Workspaces/EOS/contracts/hello.teos<sp/>&lt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ABI:<sp/>/mnt/c/Workspaces/EOS/contracts/hello.teos/build/hello.teos.abi</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WAST:<sp/>/mnt/c/Workspaces/EOS/contracts/hello.teos/build/hello.teos.wast</highlight></codeline>
</programlisting> #### CMake procedures <programlisting><codeline><highlight class="normal">$<sp/>cd<sp/>build</highlight></codeline>
<codeline><highlight class="normal">$<sp/>cmake<sp/>..</highlight></codeline>
<codeline><highlight class="normal">.......................</highlight></codeline>
<codeline><highlight class="normal">--<sp/>Configuring<sp/>done</highlight></codeline>
<codeline><highlight class="normal">--<sp/>Generating<sp/>done</highlight></codeline>
<codeline><highlight class="normal">--<sp/>Build<sp/>files<sp/>have<sp/>been<sp/>written<sp/>to:<sp/>/mnt/c/Workspaces/EOS/contracts/hello.teos/build</highlight></codeline>
<codeline><highlight class="normal">$<sp/>make</highlight></codeline>
<codeline><highlight class="normal">Scanning<sp/>dependencies<sp/>of<sp/>target<sp/>abi</highlight></codeline>
<codeline><highlight class="normal">[<sp/>50%]<sp/>Built<sp/>target<sp/>abi</highlight></codeline>
<codeline><highlight class="normal">Scanning<sp/>dependencies<sp/>of<sp/>target<sp/>wast</highlight></codeline>
<codeline><highlight class="normal">[100%]<sp/>Built<sp/>target<sp/>wast</highlight></codeline>
</programlisting></para><para><heading level="3">Contract testing</heading>
</para><para>Not implemented yet.</para><para>However, please, see the following code snippet showing how contract testing can be done. We support two flavors <emphasis>C++* and *Python</emphasis>.</para><para><heading level="4">C++ example</heading>
</para><para>The example comes from from <computeroutput>eosfactory/teos/teos/unittest1.cpp</computeroutput>: <programlisting><codeline><highlight class="normal">{c++}</highlight></codeline>
<codeline><highlight class="normal">BOOST_AUTO_TEST_CASE(test1)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>AccountEosio*<sp/>eosio;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Wallet*<sp/>wallet;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Key*<sp/>key_owner;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Key*<sp/>key_active;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Account*<sp/>alice;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Account*<sp/>bob;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Account*<sp/>carol;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>BOOST_REQUIRE(setup(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>eosio,<sp/>wallet,<sp/>key_owner,<sp/>key_active,<sp/>alice,<sp/>bob,<sp/>carol));</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>string<sp/>name<sp/>=<sp/>&quot;eosio.token&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Account<sp/>account_contract(*eosio,<sp/>name,<sp/>*key_owner,<sp/>*key_active);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>Contract<sp/>contract(account_contract,<sp/>name);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>BOOST_REQUIRE(contract.deploy());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>BOOST_REQUIRE(contract.push_action(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;create&quot;,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>R&quot;({&quot;issuer&quot;:&quot;eosio&quot;,<sp/>&quot;maximum_supply&quot;:&quot;1000000000.0000<sp/>EOS&quot;,<sp/>&quot;can_freeze&quot;:0,<sp/>&quot;can_recall&quot;:0,<sp/>&quot;can_whitelist&quot;:0})&quot;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>BOOST_REQUIRE(contract.push_action(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;issue&quot;,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>R&quot;({&quot;to&quot;:&quot;alice&quot;,<sp/>&quot;quantity&quot;:&quot;100.0000<sp/>EOS&quot;,<sp/>&quot;memo&quot;:&quot;memo&quot;})&quot;,<sp/>eosio));</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>BOOST_REQUIRE(contract.push_action(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;transfer&quot;,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>R&quot;({&quot;from&quot;:&quot;alice&quot;,<sp/>&quot;to&quot;:&quot;carol&quot;,<sp/>&quot;quantity&quot;:&quot;25.0000<sp/>EOS&quot;,<sp/>&quot;memo&quot;:&quot;memo&quot;})&quot;,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>alice));</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>BOOST_REQUIRE(contract.push_action(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;transfer&quot;,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>R&quot;({&quot;from&quot;:&quot;carol&quot;,<sp/>&quot;to&quot;:&quot;bob&quot;,<sp/>&quot;quantity&quot;:&quot;13.0000<sp/>EOS&quot;,<sp/>&quot;memo&quot;:&quot;memo&quot;})&quot;,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>carol));</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>BOOST_REQUIRE(contract.push_action(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;transfer&quot;,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>R&quot;({&quot;from&quot;:&quot;bob&quot;,<sp/>&quot;to&quot;:&quot;alice&quot;,<sp/>&quot;quantity&quot;:&quot;2.0000<sp/>EOS&quot;,<sp/>&quot;memo&quot;:&quot;memo&quot;})&quot;,<sp/>bob));</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>BOOST_REQUIRE(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>contract.get_table(&quot;accounts&quot;,<sp/>alice).get(&quot;rows..balance&quot;,<sp/>&quot;ERROR!&quot;)<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>&quot;77.0000<sp/>EOS&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>BOOST_REQUIRE(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>contract.get_table(&quot;accounts&quot;,<sp/>bob).get(&quot;rows..balance&quot;,<sp/>&quot;ERROR!&quot;)<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>&quot;11.0000<sp/>EOS&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>BOOST_REQUIRE(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>contract.get_table(&quot;accounts&quot;,<sp/>carol).get(&quot;rows..balance&quot;,<sp/>&quot;ERROR!&quot;)<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>&quot;12.0000<sp/>EOS&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>teardown(eosio,<sp/>wallet,<sp/>key_owner,<sp/>key_active,<sp/>alice,<sp/>bob,<sp/>carol);</highlight></codeline>
</programlisting> In order to see it in action, do <programlisting><codeline><highlight class="normal">$<sp/>$EOSIO_EOSFACTORY_DIR/teos/build/teos/unittest1</highlight></codeline>
</programlisting></para><para><heading level="4">Python example</heading>
</para><para>Python example comes from <computeroutput>eosfactory/tests/unittest1.cpp</computeroutput>:</para><para><programlisting filename=".Python"><codeline><highlight class="normal">class<sp/>Test1(unittest.TestCase):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@classmethod</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>setUpClass(cls):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>setUp(self):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>run(self,<sp/>result=None):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;<sp/>Stop<sp/>after<sp/>first<sp/>error<sp/>&quot;&quot;&quot;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>not<sp/>result.failures:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().run(result)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>test_00_node_reset(self):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>node.reset()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertFalse(x.error)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>node.info()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(&quot;last_irreversible_block_id&quot;<sp/>in<sp/>x.json.keys())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>sess.init()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertFalse(x)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>test_01_contract(self):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>eosf.Contract(&quot;eosio.token&quot;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertFalse(c.error,<sp/>&quot;Contract&quot;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>c.get_code()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(x,<sp/>&quot;get_code&quot;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>c.deploy()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(x,<sp/>&quot;deploy&quot;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>c.get_code()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(x,<sp/>&quot;get_code&quot;)<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>c.push_action(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;create&quot;,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;{&quot;issuer&quot;:&quot;eosio&quot;,<sp/>&quot;maximum_supply&quot;:&quot;1000000000.0000<sp/>EOS&quot;,<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;can_freeze&quot;:0,<sp/>&quot;can_recall&quot;:0,<sp/>&quot;can_whitelist&quot;:0}&apos;)<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(x,<sp/>&quot;push_action<sp/>create&quot;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>c.push_action(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;issue&quot;,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;{&quot;to&quot;:&quot;alice&quot;,<sp/>&quot;quantity&quot;:&quot;100.0000<sp/>EOS&quot;,<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;memo&quot;:&quot;issue<sp/>100.0000<sp/>EOS&quot;}&apos;,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sess.eosio)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(x,<sp/>&quot;push_action<sp/>issue&quot;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>c.push_action(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;transfer&quot;,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;{&quot;from&quot;:&quot;alice&quot;,<sp/>&quot;to&quot;:&quot;carol&quot;,<sp/>&quot;quantity&quot;:&quot;25.0000<sp/>EOS&quot;,<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;memo&quot;:&quot;transfer<sp/>25.0000<sp/>EOS&quot;}&apos;,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sess.alice)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(x,<sp/>&quot;push_action<sp/>transfer&quot;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>c.push_action(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;transfer&quot;,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;{&quot;from&quot;:&quot;carol&quot;,<sp/>&quot;to&quot;:&quot;bob&quot;,<sp/>&quot;quantity&quot;:&quot;13.0000<sp/>EOS&quot;,<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;memo&quot;:&quot;transfer<sp/>13.0000<sp/>EOS&quot;}&apos;,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sess.carol)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(x,<sp/>&quot;push_action<sp/>transfer&quot;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>c.push_action(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;transfer&quot;,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;{&quot;from&quot;:&quot;bob&quot;,<sp/>&quot;to&quot;:&quot;alice&quot;,<sp/>&quot;quantity&quot;:&quot;2.0000<sp/>EOS&quot;,<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;memo&quot;:&quot;transfer<sp/>2.0000<sp/>EOS&quot;}&apos;,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sess.bob)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(x,<sp/>&quot;push_action<sp/>transfer&quot;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/><sp/>c.get_table(&quot;accounts&quot;,<sp/>sess.alice)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertFalse(t1.error,<sp/>&quot;get<sp/>table<sp/>accounts&quot;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>c.get_table(&quot;accounts&quot;,<sp/>sess.bob)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertFalse(t2.error,<sp/>&quot;get<sp/>table<sp/>accounts&quot;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t3<sp/>=<sp/>c.get_table(&quot;accounts&quot;,<sp/>sess.carol)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertFalse(t3.error,<sp/>&quot;get<sp/>table<sp/>accounts&quot;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1.json[&quot;rows&quot;][0][&quot;balance&quot;],<sp/>&quot;77.0000<sp/>EOS&quot;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2.json[&quot;rows&quot;][0][&quot;balance&quot;],<sp/>&quot;11.0000<sp/>EOS&quot;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t3.json[&quot;rows&quot;][0][&quot;balance&quot;],<sp/>&quot;12.0000<sp/>EOS&quot;)</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>test_99_node_stop(self):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>node.stop()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(x)</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>tearDown(self):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@classmethod</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>tearDownClass(cls):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>node.stop()</highlight></codeline>
</programlisting> In order to see it in action, do <programlisting><codeline><highlight class="normal">$<sp/>python3<sp/>$EOSIO_EOSFACTORY_DIR/tests/unittest1.py</highlight></codeline>
</programlisting></para><para><heading level="2">Library structure</heading>
</para><para>The library has three layers:<itemizedlist>
<listitem><para>raw basic operation classes, for example GetInfo, DaemonStart, BuildContract;</para></listitem><listitem><para>command-line drivers for the basic operations, for example GetInfoOptions, DaemonStartOptions;</para></listitem><listitem><para>EOSIO notion abstraction classes like Account, Contract, Wallet.</para></listitem></itemizedlist>
</para><para><heading level="3">Command-line drivers</heading>
</para><para>The command-line drivers, operated by the main <computeroutput>teos</computeroutput> application, mimic and/or extend the EOSIO <computeroutput>cleos</computeroutput>. For example, the following sequence of bash commands make sense: <programlisting><codeline><highlight class="normal">$<sp/>$EOSIO_TEOS<sp/>bootstrap<sp/>contract<sp/>hello.teos<sp/><sp/><sp/><sp/><sp/>##<sp/>new<sp/>contract<sp/>template</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/>template<sp/>contract:<sp/>/mnt/c/Workspaces/EOS/contracts/hello.teos</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">$<sp/>$EOSIO_TEOS<sp/>build<sp/>contract<sp/>/mnt/c/Workspaces/EOS/contracts/hello.teos</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/>WAST:<sp/>/mnt/c/Workspaces/EOS/contracts/hello.teos/build/hello.teos.wast</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">$<sp/>$EOSIO_TEOS<sp/>generate<sp/>abi<sp/>/mnt/c/Workspaces/EOS/contracts/hello.teos</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/>ABI:<sp/>/mnt/c/Workspaces/EOS/contracts/hello.teos/build/hello.teos.abi</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">$<sp/>$EOSIO_TEOS<sp/>daemon<sp/>start<sp/>-c<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>##<sp/>reset<sp/>local<sp/>node</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/>nodeos<sp/>exe<sp/>file:<sp/>/mnt/c/Workspaces/EOS/eos/build/programs/nodeos/nodeos</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/>genesis<sp/>state<sp/>file:<sp/>/mnt/c/Workspaces/EOS/eosfactory/build/daemon/data-dir/genesis.json</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/><sp/>server<sp/>address:<sp/>127.0.0.1:8888</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/>config<sp/>directory:<sp/>/mnt/c/Workspaces/EOS/eosfactory/build/daemon/data-dir</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/>wallet<sp/>directory:<sp/>/mnt/c/Workspaces/EOS/eosfactory/build/daemon/data-dir/wallet</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/>head<sp/>block<sp/>number:<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/>head<sp/>block<sp/>time:<sp/>2018-05-23T16:02:40</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">$<sp/>$EOSIO_TEOS<sp/>wallet<sp/>create</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>password:<sp/>PW5K5jzJZaCXEtrwThSgPjgSjiZj8d9i1fCGZSUM7ZC9XEUySarnD</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/>You<sp/>need<sp/>to<sp/>save<sp/>this<sp/>password<sp/>to<sp/>be<sp/>able<sp/>to<sp/>lock/unlock<sp/>the<sp/>wallet!</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">$<sp/>$EOSIO_TEOS<sp/>set<sp/>contract<sp/>eosio<sp/>hello.teos<sp/>--permission<sp/>eosio</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/><sp/>transaction<sp/>id:<sp/>ef2744011c17b219f346c2841ebc316c0ebd21da9804ec804c860f71558481ba</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">$<sp/>$EOSIO_TEOS<sp/>create<sp/>key<sp/>owner</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>name:<sp/>owner</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/><sp/><sp/><sp/><sp/>private<sp/>key:<sp/>5J5Th3pDjjhkvwiPSETfqoSPp95APj8y7RaaghHtfq7UMUjy3Xa</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>public<sp/>key:<sp/>EOS6GKYMgKHeuMAaHb3v4nGBg9NiYRcJoU3YegUYeUwSjUfSJWLdP</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">$<sp/>$EOSIO_TEOS<sp/>create<sp/>key<sp/>active</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>name:<sp/>active</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/><sp/><sp/><sp/><sp/>private<sp/>key:<sp/>5Jq3guBccY52bw7h3qTTLUHMvg99vx6qDTtyGN7LQrL68nQzszQ</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>public<sp/>key:<sp/>EOS7gnfsg5ZiS9wfGUJah18Dmkq4aXz7gQDTcmcFKtV9tMuhB5AeA</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">$<sp/>$EOSIO_TEOS<sp/>wallet<sp/>import<sp/>default<sp/>5J5Th3pDjjhkvwiPSETfqoSPp95APj8y7RaaghHtfq7UMUjy3Xa</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wallet:<sp/>default</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/><sp/><sp/><sp/>key<sp/>imported:<sp/>5J5Th3pDjjhkvwiPSETfqoSPp95APj8y7RaaghHtfq7UMUjy3Xa</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">$<sp/>$EOSIO_TEOS<sp/>wallet<sp/>import<sp/>default<sp/>5Jq3guBccY52bw7h3qTTLUHMvg99vx6qDTtyGN7LQrL68nQzszQ</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wallet:<sp/>default</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/><sp/><sp/><sp/>key<sp/>imported:<sp/>5Jq3guBccY52bw7h3qTTLUHMvg99vx6qDTtyGN7LQrL68nQzszQ</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">$<sp/>$EOSIO_TEOS<sp/>create<sp/>account<sp/>eosio<sp/>hello.teos<sp/>EOS6GKYMgKHeuMAaHb3v4nGBg9NiYRcJoU3YegUYeUwSjUfSJWLdP<sp/>EOS7gnfsg5ZiS9wfGUJah18Dmkq4aXz7gQDTcmcFKtV9tMuhB5AeA</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/><sp/>transaction<sp/>id:<sp/>0ff62a96bde5bd911da135557da56fabb3fc1282d8be8797be485aafa519bce4</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">$<sp/>$EOSIO_TEOS<sp/>set<sp/>contract<sp/>hello.teos<sp/>hello.teos</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/><sp/>transaction<sp/>id:<sp/>2820976a76893685f4cfc2578c7c0f0ff3e8b9112732de202dab16afd7b56884</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">$<sp/>$EOSIO_TEOS<sp/>push<sp/>action<sp/>hello.teos<sp/>hi<sp/>&apos;[&quot;hello.teos&quot;]&apos;<sp/>-p<sp/>hello.teos</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/><sp/>transaction<sp/>id:<sp/>bdbace3b4327f70ccc7d63d1b1287a7abbec4240be9b2d7695192bf80da45f92</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/>INFO<sp/>account<sp/>name:<sp/>7684013990126944256<sp/><sp/>@<sp/>17:56:15<sp/>hello.teos.cpp[16](hi)</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/>Hello,<sp/>hello.teos</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">$<sp/>$EOSIO_TEOS<sp/>daemon<sp/>stop</highlight></codeline>
<codeline><highlight class="normal">#<sp/><sp/>Daemon<sp/>is<sp/>stopped.</highlight></codeline>
</programlisting> </para>    </detaileddescription>
  </compounddef>
</doxygen>
