<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="namespaceteos_1_1command" kind="namespace" language="C++">
    <compoundname>teos::command</compoundname>
    <innerclass refid="classteos_1_1command_1_1_call_chain" prot="public">teos::command::CallChain</innerclass>
    <innerclass refid="classteos_1_1command_1_1_create_account" prot="public">teos::command::CreateAccount</innerclass>
    <innerclass refid="classteos_1_1command_1_1_create_account_options" prot="public">teos::command::CreateAccountOptions</innerclass>
    <innerclass refid="classteos_1_1command_1_1_create_key" prot="public">teos::command::CreateKey</innerclass>
    <innerclass refid="classteos_1_1command_1_1_create_key_options" prot="public">teos::command::CreateKeyOptions</innerclass>
    <innerclass refid="classteos_1_1command_1_1_get_account" prot="public">teos::command::GetAccount</innerclass>
    <innerclass refid="classteos_1_1command_1_1_get_account_options" prot="public">teos::command::GetAccountOptions</innerclass>
    <innerclass refid="classteos_1_1command_1_1_get_accounts" prot="public">teos::command::GetAccounts</innerclass>
    <innerclass refid="classteos_1_1command_1_1_get_accounts_options" prot="public">teos::command::GetAccountsOptions</innerclass>
    <innerclass refid="classteos_1_1command_1_1_get_block" prot="public">teos::command::GetBlock</innerclass>
    <innerclass refid="classteos_1_1command_1_1_get_block_options" prot="public">teos::command::GetBlockOptions</innerclass>
    <innerclass refid="classteos_1_1command_1_1_get_code" prot="public">teos::command::GetCode</innerclass>
    <innerclass refid="classteos_1_1command_1_1_get_code_options" prot="public">teos::command::GetCodeOptions</innerclass>
    <innerclass refid="classteos_1_1command_1_1_get_info" prot="public">teos::command::GetInfo</innerclass>
    <innerclass refid="classteos_1_1command_1_1_get_info_options" prot="public">teos::command::GetInfoOptions</innerclass>
    <innerclass refid="classteos_1_1command_1_1_get_table" prot="public">teos::command::GetTable</innerclass>
    <innerclass refid="classteos_1_1command_1_1_get_table_options" prot="public">teos::command::GetTableOptions</innerclass>
    <innerclass refid="classteos_1_1command_1_1_key_pair" prot="public">teos::command::KeyPair</innerclass>
    <innerclass refid="classteos_1_1command_1_1_push_action" prot="public">teos::command::PushAction</innerclass>
    <innerclass refid="classteos_1_1command_1_1_push_action_options" prot="public">teos::command::PushActionOptions</innerclass>
    <innerclass refid="classteos_1_1command_1_1_set_contract" prot="public">teos::command::SetContract</innerclass>
    <innerclass refid="classteos_1_1command_1_1_set_contract_options" prot="public">teos::command::SetContractOptions</innerclass>
    <innerclass refid="classteos_1_1command_1_1_version_client" prot="public">teos::command::VersionClient</innerclass>
    <innerclass refid="classteos_1_1command_1_1_version_client_options" prot="public">teos::command::VersionClientOptions</innerclass>
    <innerclass refid="classteos_1_1command_1_1_wallet_create" prot="public">teos::command::WalletCreate</innerclass>
    <innerclass refid="classteos_1_1command_1_1_wallet_create_options" prot="public">teos::command::WalletCreateOptions</innerclass>
    <innerclass refid="classteos_1_1command_1_1_wallet_import" prot="public">teos::command::WalletImport</innerclass>
    <innerclass refid="classteos_1_1command_1_1_wallet_import_options" prot="public">teos::command::WalletImportOptions</innerclass>
    <innerclass refid="classteos_1_1command_1_1_wallet_keys_options" prot="public">teos::command::WalletKeysOptions</innerclass>
    <innerclass refid="classteos_1_1command_1_1_wallet_list" prot="public">teos::command::WalletList</innerclass>
    <innerclass refid="classteos_1_1command_1_1_wallet_list_options" prot="public">teos::command::WalletListOptions</innerclass>
    <innerclass refid="classteos_1_1command_1_1_wallet_lock" prot="public">teos::command::WalletLock</innerclass>
    <innerclass refid="classteos_1_1command_1_1_wallet_lock_all" prot="public">teos::command::WalletLockAll</innerclass>
    <innerclass refid="classteos_1_1command_1_1_wallet_lock_all_options" prot="public">teos::command::WalletLockAllOptions</innerclass>
    <innerclass refid="classteos_1_1command_1_1_wallet_lock_options" prot="public">teos::command::WalletLockOptions</innerclass>
    <innerclass refid="classteos_1_1command_1_1_wallet_open" prot="public">teos::command::WalletOpen</innerclass>
    <innerclass refid="classteos_1_1command_1_1_wallet_open_options" prot="public">teos::command::WalletOpenOptions</innerclass>
    <innerclass refid="classteos_1_1command_1_1_wallet_unlock" prot="public">teos::command::WalletUnlock</innerclass>
    <innerclass refid="classteos_1_1command_1_1_wallet_unlock_options" prot="public">teos::command::WalletUnlockOptions</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="eos__interface_8cpp_1a5ce8751c1bcee63402e434c9f5e848c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classteos_1_1command_1_1_call_chain" kindref="compound">CallChain</ref></type>
        <definition>CallChain teos::command::sign_transaction</definition>
        <argsstring>(chain::signed_transaction &amp;trx)</argsstring>
        <name>sign_transaction</name>
        <param>
          <type>chain::signed_transaction &amp;</type>
          <declname>trx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="teos_lib/eos_interface.cpp" line="172" column="1" bodyfile="teos_lib/eos_interface.cpp" bodystart="172" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="eos__interface_8cpp_1a75414a9bc4d925d127ba590ac4fcfe78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string teos::command::generate_nonce_value</definition>
        <argsstring>()</argsstring>
        <name>generate_nonce_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="teos_lib/eos_interface.cpp" line="209" column="1" bodyfile="teos_lib/eos_interface.cpp" bodystart="209" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="eos__interface_8cpp_1a6975e3563b14e5146aa1026633342b27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>chain::action</type>
        <definition>chain::action teos::command::generate_nonce</definition>
        <argsstring>()</argsstring>
        <name>generate_nonce</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="teos_lib/eos_interface.cpp" line="213" column="1" bodyfile="teos_lib/eos_interface.cpp" bodystart="213" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="eos__interface_8cpp_1a0ed002ec1daf28f6d4d995bfd7eb35e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classteos_1_1_teos_command" kindref="compound">TeosCommand</ref></type>
        <definition>TeosCommand teos::command::push_transaction</definition>
        <argsstring>(signed_transaction &amp;trx, unsigned expirationSec=30, bool tx_skip_sign=false, bool tx_dont_broadcast=false, bool tx_force_unique=false, uint32_t tx_max_cpu_usage=0, uint32_t tx_max_net_usage=0, int32_t extra_kcpu=1000, packed_transaction::compression_type compression=packed_transaction::none)</argsstring>
        <name>push_transaction</name>
        <param>
          <type>signed_transaction &amp;</type>
          <declname>trx</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>expirationSec</declname>
          <defval>30</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>tx_skip_sign</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>tx_dont_broadcast</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>tx_force_unique</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tx_max_cpu_usage</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tx_max_net_usage</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int32_t</type>
          <declname>extra_kcpu</declname>
          <defval>1000</defval>
        </param>
        <param>
          <type>packed_transaction::compression_type</type>
          <declname>compression</declname>
          <defval>packed_transaction::none</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="teos_lib/eos_interface.cpp" line="221" column="1" bodyfile="teos_lib/eos_interface.cpp" bodystart="221" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="eos__interface_8cpp_1a0527c7a7fbe974514ede3dc703e5318b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; chain::permission_level &gt;</type>
        <definition>vector&lt;chain::permission_level&gt; teos::command::get_account_permissions</definition>
        <argsstring>(const vector&lt; string &gt; &amp;permissions)</argsstring>
        <name>get_account_permissions</name>
        <param>
          <type>const vector&lt; string &gt; &amp;</type>
          <declname>permissions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="teos_lib/eos_interface.cpp" line="275" column="1" bodyfile="teos_lib/eos_interface.cpp" bodystart="275" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="eos__interface_8cpp_1aeeeadd6991dcaee01c65d21c41327286" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classteos_1_1_teos_command" kindref="compound">TeosCommand</ref></type>
        <definition>TeosCommand teos::command::push_actions</definition>
        <argsstring>(vector&lt; chain::action &gt; &amp;&amp;actions, unsigned expirationSec=30, bool tx_skip_sign=false, bool tx_dont_broadcast=false, bool tx_force_unique=false, uint32_t tx_max_cpu_usage=0, uint32_t tx_max_net_usage=0, int32_t extra_kcpu=1000, packed_transaction::compression_type compression=packed_transaction::none)</argsstring>
        <name>push_actions</name>
        <param>
          <type>vector&lt; chain::action &gt; &amp;&amp;</type>
          <declname>actions</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>expirationSec</declname>
          <defval>30</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>tx_skip_sign</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>tx_dont_broadcast</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>tx_force_unique</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tx_max_cpu_usage</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tx_max_net_usage</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int32_t</type>
          <declname>extra_kcpu</declname>
          <defval>1000</defval>
        </param>
        <param>
          <type>packed_transaction::compression_type</type>
          <declname>compression</declname>
          <defval>packed_transaction::none</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="teos_lib/eos_interface.cpp" line="287" column="1" bodyfile="teos_lib/eos_interface.cpp" bodystart="287" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="eos__interface_8cpp_1a3a5cd364dd0a69aee3e885c7944dedca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classteos_1_1_teos_command" kindref="compound">TeosCommand</ref></type>
        <definition>TeosCommand teos::command::send_actions</definition>
        <argsstring>(vector&lt; chain::action &gt; &amp;&amp;actions, unsigned expirationSec=30, bool tx_skip_sign=false, bool tx_dont_broadcast=false, bool tx_force_unique=false, uint32_t tx_max_cpu_usage=0, uint32_t tx_max_net_usage=0, int32_t extra_kcpu=1000, packed_transaction::compression_type compression=packed_transaction::none)</argsstring>
        <name>send_actions</name>
        <param>
          <type>vector&lt; chain::action &gt; &amp;&amp;</type>
          <declname>actions</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>expirationSec</declname>
          <defval>30</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>tx_skip_sign</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>tx_dont_broadcast</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>tx_force_unique</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tx_max_cpu_usage</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tx_max_net_usage</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int32_t</type>
          <declname>extra_kcpu</declname>
          <defval>1000</defval>
        </param>
        <param>
          <type>packed_transaction::compression_type</type>
          <declname>compression</declname>
          <defval>packed_transaction::none</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="teos_lib/eos_interface.cpp" line="311" column="1" bodyfile="teos_lib/eos_interface.cpp" bodystart="311" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="eos__interface_8cpp_1ad6a4036d03de4f51eb5c4f417a532353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>chain::action</type>
        <definition>chain::action teos::command::create_newaccount</definition>
        <argsstring>(const name &amp;creator, const name &amp;newaccount, public_key_type owner, public_key_type active, vector&lt; string &gt; permission)</argsstring>
        <name>create_newaccount</name>
        <param>
          <type>const name &amp;</type>
          <declname>creator</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>newaccount</declname>
        </param>
        <param>
          <type>public_key_type</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>public_key_type</type>
          <declname>active</declname>
        </param>
        <param>
          <type>vector&lt; string &gt;</type>
          <declname>permission</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="teos_lib/eos_interface.cpp" line="338" column="1" bodyfile="teos_lib/eos_interface.cpp" bodystart="338" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="eos__interface_8cpp_1adaf501911cb56df981cdae9094148dea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classteos_1_1_teos_command" kindref="compound">TeosCommand</ref></type>
        <definition>TeosCommand teos::command::createAccount</definition>
        <argsstring>(string creator, string accountName, string ownerKeyStr, string activeKeyStr, string permission, unsigned expiration, bool skipSignature, bool dontBroadcast, bool forceUnique, unsigned maxCpuUsage, unsigned maxNetUsage)</argsstring>
        <name>createAccount</name>
        <param>
          <type>string</type>
          <declname>creator</declname>
        </param>
        <param>
          <type>string</type>
          <declname>accountName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>ownerKeyStr</declname>
        </param>
        <param>
          <type>string</type>
          <declname>activeKeyStr</declname>
        </param>
        <param>
          <type>string</type>
          <declname>permission</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>expiration</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipSignature</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dontBroadcast</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceUnique</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>maxCpuUsage</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>maxNetUsage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="teos_lib/eos_interface.cpp" line="355" column="1" bodyfile="teos_lib/eos_interface.cpp" bodystart="355" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="eos__interface_8cpp_1a064d7ec14d761e49aeb3cf206e1f5bf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>chain::action</type>
        <definition>chain::action teos::command::create_setcode</definition>
        <argsstring>(const name &amp;account, const bytes &amp;code, vector&lt; string &gt; permissions)</argsstring>
        <name>create_setcode</name>
        <param>
          <type>const name &amp;</type>
          <declname>account</declname>
        </param>
        <param>
          <type>const bytes &amp;</type>
          <declname>code</declname>
        </param>
        <param>
          <type>vector&lt; string &gt;</type>
          <declname>permissions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="teos_lib/eos_interface.cpp" line="385" column="1" bodyfile="teos_lib/eos_interface.cpp" bodystart="385" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="eos__interface_8cpp_1afbc7eba737662d14c89cb7d174129d36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>chain::action</type>
        <definition>chain::action teos::command::create_setabi</definition>
        <argsstring>(const name &amp;account, const eosio::chain::abi_def &amp;abi, vector&lt; string &gt; permissions)</argsstring>
        <name>create_setabi</name>
        <param>
          <type>const name &amp;</type>
          <declname>account</declname>
        </param>
        <param>
          <type>const eosio::chain::abi_def &amp;</type>
          <declname>abi</declname>
        </param>
        <param>
          <type>vector&lt; string &gt;</type>
          <declname>permissions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="teos_lib/eos_interface.cpp" line="401" column="1" bodyfile="teos_lib/eos_interface.cpp" bodystart="401" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="eos__interface_8cpp_1a0d4f34f5ca803ae152f73f95b38b8b8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classteos_1_1_teos_command" kindref="compound">TeosCommand</ref></type>
        <definition>TeosCommand teos::command::setContract</definition>
        <argsstring>(string account, string contractDir, string &amp;wastFile, string &amp;abiFile, string permission, unsigned expiration, bool skipSignature, bool dontBroadcast, bool forceUnique, unsigned maxCpuUsage, unsigned maxNetUsage)</argsstring>
        <name>setContract</name>
        <param>
          <type>string</type>
          <declname>account</declname>
        </param>
        <param>
          <type>string</type>
          <declname>contractDir</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>wastFile</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>abiFile</declname>
        </param>
        <param>
          <type>string</type>
          <declname>permission</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>expiration</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipSignature</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dontBroadcast</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceUnique</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>maxCpuUsage</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>maxNetUsage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="teos_lib/eos_interface.cpp" line="414" column="1" bodyfile="teos_lib/eos_interface.cpp" bodystart="414" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="eos__interface_8cpp_1aa1023e49161ff0cd43fb0746d60ab853" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classteos_1_1_teos_command" kindref="compound">TeosCommand</ref></type>
        <definition>TeosCommand teos::command::getCode</definition>
        <argsstring>(string accountName, string wastFile, string abiFile)</argsstring>
        <name>getCode</name>
        <param>
          <type>string</type>
          <declname>accountName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>wastFile</declname>
        </param>
        <param>
          <type>string</type>
          <declname>abiFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="teos_lib/eos_interface.cpp" line="489" column="1" bodyfile="teos_lib/eos_interface.cpp" bodystart="489" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="eos__interface_8cpp_1a848f89a9ed3e124cea41c30fb3ed4cc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classteos_1_1_teos_command" kindref="compound">TeosCommand</ref></type>
        <definition>TeosCommand teos::command::pushAction</definition>
        <argsstring>(string contract, string action, string data, string permission, unsigned expiration, bool skipSignature, bool dontBroadcast, bool forceUnique, unsigned maxCpuUsage, unsigned maxNetUsage)</argsstring>
        <name>pushAction</name>
        <param>
          <type>string</type>
          <declname>contract</declname>
        </param>
        <param>
          <type>string</type>
          <declname>action</declname>
        </param>
        <param>
          <type>string</type>
          <declname>data</declname>
        </param>
        <param>
          <type>string</type>
          <declname>permission</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>expiration</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipSignature</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dontBroadcast</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceUnique</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>maxCpuUsage</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>maxNetUsage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="teos_lib/eos_interface.cpp" line="527" column="1" bodyfile="teos_lib/eos_interface.cpp" bodystart="527" bodyend="579"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="teos_lib/eos_interface.cpp" line="87" column="1"/>
  </compounddef>
</doxygen>
